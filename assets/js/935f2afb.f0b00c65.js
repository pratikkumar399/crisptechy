"use strict";(self.webpackChunkcrisptechy=self.webpackChunkcrisptechy||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"DSA BLOGS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"binarysearch","href":"/crisptechy/docs/DSA BLOGS/BinarySearch/","docId":"DSA BLOGS/BinarySearch/binarysearch"},{"type":"link","label":"gitnotes","href":"/crisptechy/docs/DSA BLOGS/GitNotes/","docId":"DSA BLOGS/GitNotes/gitnotes"},{"type":"category","label":"Graphs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"KhansAlgorithm","href":"/crisptechy/docs/DSA BLOGS/Graphs/KhansAlgorithm","docId":"DSA BLOGS/Graphs/KhansAlgorithm"},{"type":"link","label":"bfsalgorithms","href":"/crisptechy/docs/DSA BLOGS/Graphs/bfsalgorithms","docId":"DSA BLOGS/Graphs/bfsalgorithms"},{"type":"link","label":"cycle_dfs_bfs_undirected","href":"/crisptechy/docs/DSA BLOGS/Graphs/cycle_dfs_bfs_undirected","docId":"DSA BLOGS/Graphs/cycle_dfs_bfs_undirected"},{"type":"link","label":"dijkstraalgorithm","href":"/crisptechy/docs/DSA BLOGS/Graphs/dijkstraalgorithm","docId":"DSA BLOGS/Graphs/dijkstraalgorithm"},{"type":"link","label":"graphrepresentation","href":"/crisptechy/docs/DSA BLOGS/Graphs/graphrepresentation","docId":"DSA BLOGS/Graphs/graphrepresentation"},{"type":"link","label":"topologicalsort","href":"/crisptechy/docs/DSA BLOGS/Graphs/topologicalsort","docId":"DSA BLOGS/Graphs/topologicalsort"}]},{"type":"category","label":"Trees","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Traversals","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"inordertraversal","href":"/crisptechy/docs/DSA BLOGS/Trees/Traversals/inordertraversal","docId":"DSA BLOGS/Trees/Traversals/inordertraversal"},{"type":"link","label":"levelordertraversal","href":"/crisptechy/docs/DSA BLOGS/Trees/Traversals/levelordertraversal","docId":"DSA BLOGS/Trees/Traversals/levelordertraversal"},{"type":"link","label":"postordertraversal","href":"/crisptechy/docs/DSA BLOGS/Trees/Traversals/postordertraversal","docId":"DSA BLOGS/Trees/Traversals/postordertraversal"},{"type":"link","label":"preordertraversal","href":"/crisptechy/docs/DSA BLOGS/Trees/Traversals/preordertraversal","docId":"DSA BLOGS/Trees/Traversals/preordertraversal"}]},{"type":"link","label":"binarytree","href":"/crisptechy/docs/DSA BLOGS/Trees/binarytree","docId":"DSA BLOGS/Trees/binarytree"}]}]},{"type":"category","label":"NodeJs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ChildProcess","href":"/crisptechy/docs/NodeJs/ChildProcess","docId":"NodeJs/ChildProcess"},{"type":"link","label":"CommonJs","href":"/crisptechy/docs/NodeJs/CommonJs","docId":"NodeJs/CommonJs"},{"type":"link","label":"Node_intro","href":"/crisptechy/docs/NodeJs/Node_intro","docId":"NodeJs/Node_intro"},{"type":"link","label":"Os_module","href":"/crisptechy/docs/NodeJs/Os_module","docId":"NodeJs/Os_module"},{"type":"link","label":"Pathmodule","href":"/crisptechy/docs/NodeJs/Pathmodule","docId":"NodeJs/Pathmodule"}]},{"type":"category","label":"OOPS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cohesion_Coupling","href":"/crisptechy/docs/OOPS/Cohesion_Coupling","docId":"OOPS/Cohesion_Coupling"},{"type":"link","label":"OOPS in C++","href":"/crisptechy/docs/OOPS/OOPS_IN_CPP","docId":"OOPS/OOPS_IN_CPP"}]},{"type":"link","label":"intro","href":"/crisptechy/docs/intro","docId":"intro"}],"docs":[{"type":"category","label":"DSA GUIDES","items":[{"type":"category","label":"Binary Search","items":[{"type":"link","label":"binarysearch","href":"/crisptechy/docs/DSA BLOGS/BinarySearch/","docId":"DSA BLOGS/BinarySearch/binarysearch"}],"collapsed":true,"collapsible":true,"href":"/crisptechy/docs/DSA BLOGS/BinarySearch/"},{"type":"category","label":"GitNotes","items":[{"type":"link","label":"gitnotes","href":"/crisptechy/docs/DSA BLOGS/GitNotes/","docId":"DSA BLOGS/GitNotes/gitnotes"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Graphs","items":[{"type":"link","label":"bfsalgorithms","href":"/crisptechy/docs/DSA BLOGS/Graphs/bfsalgorithms","docId":"DSA BLOGS/Graphs/bfsalgorithms"},{"type":"link","label":"cycle_dfs_bfs_undirected","href":"/crisptechy/docs/DSA BLOGS/Graphs/cycle_dfs_bfs_undirected","docId":"DSA BLOGS/Graphs/cycle_dfs_bfs_undirected"},{"type":"link","label":"dijkstraalgorithm","href":"/crisptechy/docs/DSA BLOGS/Graphs/dijkstraalgorithm","docId":"DSA BLOGS/Graphs/dijkstraalgorithm"},{"type":"link","label":"graphrepresentation","href":"/crisptechy/docs/DSA BLOGS/Graphs/graphrepresentation","docId":"DSA BLOGS/Graphs/graphrepresentation"},{"type":"link","label":"KhansAlgorithm","href":"/crisptechy/docs/DSA BLOGS/Graphs/KhansAlgorithm","docId":"DSA BLOGS/Graphs/KhansAlgorithm"},{"type":"link","label":"topologicalsort","href":"/crisptechy/docs/DSA BLOGS/Graphs/topologicalsort","docId":"DSA BLOGS/Graphs/topologicalsort"}],"collapsed":true,"collapsible":true,"href":"/crisptechy/docs/DSA BLOGS/Graphs/bfsalgorithms"},{"type":"category","label":"Trees","items":[{"type":"category","label":"Traversals","items":[{"type":"link","label":"preordertraversal","href":"/crisptechy/docs/DSA BLOGS/Trees/Traversals/preordertraversal","docId":"DSA BLOGS/Trees/Traversals/preordertraversal"},{"type":"link","label":"inordertraversal","href":"/crisptechy/docs/DSA BLOGS/Trees/Traversals/inordertraversal","docId":"DSA BLOGS/Trees/Traversals/inordertraversal"},{"type":"link","label":"postordertraversal","href":"/crisptechy/docs/DSA BLOGS/Trees/Traversals/postordertraversal","docId":"DSA BLOGS/Trees/Traversals/postordertraversal"},{"type":"link","label":"levelordertraversal","href":"/crisptechy/docs/DSA BLOGS/Trees/Traversals/levelordertraversal","docId":"DSA BLOGS/Trees/Traversals/levelordertraversal"}],"collapsed":true,"collapsible":true,"href":"/crisptechy/docs/category/traversals"}],"collapsed":true,"collapsible":true,"href":"/crisptechy/docs/DSA BLOGS/Trees/binarytree"}],"collapsed":true,"collapsible":true,"href":"/crisptechy/docs/category/dsa-guides"},{"type":"category","label":"OOPS","items":[{"type":"link","label":"OOPS in C++","href":"/crisptechy/docs/OOPS/OOPS_IN_CPP","docId":"OOPS/OOPS_IN_CPP"},{"type":"link","label":"Cohesion_Coupling","href":"/crisptechy/docs/OOPS/Cohesion_Coupling","docId":"OOPS/Cohesion_Coupling"}],"collapsed":true,"collapsible":true,"href":"/crisptechy/docs/category/oops"},{"type":"category","label":"NodeJs","items":[{"type":"link","label":"Node_intro","href":"/crisptechy/docs/NodeJs/Node_intro","docId":"NodeJs/Node_intro"},{"type":"link","label":"CommonJs","href":"/crisptechy/docs/NodeJs/CommonJs","docId":"NodeJs/CommonJs"},{"type":"link","label":"Os_module","href":"/crisptechy/docs/NodeJs/Os_module","docId":"NodeJs/Os_module"},{"type":"link","label":"Pathmodule","href":"/crisptechy/docs/NodeJs/Pathmodule","docId":"NodeJs/Pathmodule"}],"collapsed":true,"collapsible":true,"href":"/crisptechy/docs/category/nodejs"}]},"docs":{"DSA BLOGS/BinarySearch/binarysearch":{"id":"DSA BLOGS/BinarySearch/binarysearch","title":"binarysearch","description":"Binary Search is a searching algorithm .","sidebar":"docs"},"DSA BLOGS/GitNotes/gitnotes":{"id":"DSA BLOGS/GitNotes/gitnotes","title":"gitnotes","description":"","sidebar":"docs"},"DSA BLOGS/Graphs/bfsalgorithms":{"id":"DSA BLOGS/Graphs/bfsalgorithms","title":"bfsalgorithms","description":"","sidebar":"docs"},"DSA BLOGS/Graphs/cycle_dfs_bfs_undirected":{"id":"DSA BLOGS/Graphs/cycle_dfs_bfs_undirected","title":"cycle_dfs_bfs_undirected","description":"Cycle detection In Undirected Graph","sidebar":"docs"},"DSA BLOGS/Graphs/dijkstraalgorithm":{"id":"DSA BLOGS/Graphs/dijkstraalgorithm","title":"dijkstraalgorithm","description":"Dijkstra algorithm","sidebar":"docs"},"DSA BLOGS/Graphs/graphrepresentation":{"id":"DSA BLOGS/Graphs/graphrepresentation","title":"graphrepresentation","description":"So there are two ways to represent a graph","sidebar":"docs"},"DSA BLOGS/Graphs/KhansAlgorithm":{"id":"DSA BLOGS/Graphs/KhansAlgorithm","title":"KhansAlgorithm","description":"Khan\'s Algorithm for topoSort","sidebar":"docs"},"DSA BLOGS/Graphs/topologicalsort":{"id":"DSA BLOGS/Graphs/topologicalsort","title":"topologicalsort","description":"Topological Sort","sidebar":"docs"},"DSA BLOGS/Trees/binarytree":{"id":"DSA BLOGS/Trees/binarytree","title":"binarytree","description":"Binary Tree","sidebar":"docs"},"DSA BLOGS/Trees/Traversals/inordertraversal":{"id":"DSA BLOGS/Trees/Traversals/inordertraversal","title":"inordertraversal","description":"Inorder Traversal","sidebar":"docs"},"DSA BLOGS/Trees/Traversals/levelordertraversal":{"id":"DSA BLOGS/Trees/Traversals/levelordertraversal","title":"levelordertraversal","description":"Level Order Traversal","sidebar":"docs"},"DSA BLOGS/Trees/Traversals/postordertraversal":{"id":"DSA BLOGS/Trees/Traversals/postordertraversal","title":"postordertraversal","description":"PostOrder Traversal","sidebar":"docs"},"DSA BLOGS/Trees/Traversals/preordertraversal":{"id":"DSA BLOGS/Trees/Traversals/preordertraversal","title":"preordertraversal","description":"PreOrder Traversal","sidebar":"docs"},"intro":{"id":"intro","title":"intro","description":"Welcome to CrispTechy. Start Learning from the docs specially prepared for you \ud83d\ude09","sidebar":"tutorialSidebar"},"NodeJs/ChildProcess":{"id":"NodeJs/ChildProcess","title":"ChildProcess","description":"Child processes in Node.js are independent processes spawned by the main (parent) Node.js process. Each child process runs in its own memory space and operates concurrently with the parent process. Child processes can execute commands, scripts, or other Node.js scripts, enabling parallel processing and distributed computing.","sidebar":"tutorialSidebar"},"NodeJs/CommonJs":{"id":"NodeJs/CommonJs","title":"CommonJs","description":"In Node.js, the module system is based on the CommonJS pattern. CommonJS is a module specification that defines a way to organize and share reusable JavaScript code. Node.js adopted the CommonJS module system to provide a structured approach to modularize code in Node.js applications.","sidebar":"docs"},"NodeJs/Node_intro":{"id":"NodeJs/Node_intro","title":"Node_intro","description":"* ` Node runs on a server that is not in a browser.`","sidebar":"docs"},"NodeJs/Os_module":{"id":"NodeJs/Os_module","title":"Os_module","description":"In Node.js, the os module is a core module that provides various utility functions related to the operating system. It allows you to access information about the computer\'s operating system, network interfaces, and perform other OS-related operations. Here are some common functionalities provided by the os module:","sidebar":"docs"},"NodeJs/Pathmodule":{"id":"NodeJs/Pathmodule","title":"Pathmodule","description":"In Node.js, the path module is a core module that provides utilities for working with file and directory paths. It helps in constructing, manipulating, and resolving file paths in a platform-independent manner. The path module is useful for tasks such as joining path segments, resolving relative paths, and extracting information from file paths. Here are some common functionalities provided by the path module:","sidebar":"docs"},"OOPS/Cohesion_Coupling":{"id":"OOPS/Cohesion_Coupling","title":"Cohesion_Coupling","description":"Cohesion and Coupling in OOPs","sidebar":"docs"},"OOPS/OOPS_IN_CPP":{"id":"OOPS/OOPS_IN_CPP","title":"OOPS in C++","description":"Hello everyone, and welcome to this blog post. Today, we will discuss Object-Oriented Programming (OOP) in C++. This article will provide a brief overview of the essential concepts in OOP in C++.","sidebar":"docs"}}}')}}]);