"use strict";(self.webpackChunkcrisptechy=self.webpackChunkcrisptechy||[]).push([[2240],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>y});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var s=r.createContext({}),p=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},u=function(n){var e=p(n.components);return r.createElement(s.Provider,{value:e},n.children)},c="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},w=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,s=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),c=p(t),w=o,y=c["".concat(s,".").concat(w)]||c[w]||m[w]||i;return t?r.createElement(y,a(a({ref:e},u),{},{components:t})):r.createElement(y,a({ref:e},u))}));function y(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,a=new Array(i);a[0]=w;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l[c]="string"==typeof n?n:o,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}w.displayName="MDXCreateElement"},9171:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const i={},a=void 0,l={unversionedId:"DsaInteviewQuestions/Pow(x,n)",id:"DsaInteviewQuestions/Pow(x,n)",title:"Pow(x,n)",description:"Pow(x,n)",source:"@site/interviewseries/DsaInteviewQuestions/Pow(x,n).md",sourceDirName:"DsaInteviewQuestions",slug:"/DsaInteviewQuestions/Pow(x,n)",permalink:"/crisptechy/interviewseries/DsaInteviewQuestions/Pow(x,n)",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"interviewSeries",previous:{title:"PascalsTraingle",permalink:"/crisptechy/interviewseries/DsaInteviewQuestions/PascalsTraingle"},next:{title:"Redundant Connection",permalink:"/crisptechy/interviewseries/DsaInteviewQuestions/RedundantConnection"}},s={},p=[{value:"Pow(x,n)",id:"powxn",level:2}],u={toc:p},c="wrapper";function m(n){let{components:e,...i}=n;return(0,o.kt)(c,(0,r.Z)({},u,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"powxn"},"Pow(x,n)"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Alt text",src:t(9589).Z,width:"907",height:"203"})),(0,o.kt)("p",null,"Problem link : ",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/powx-n/"},"Pow(x,n)")),(0,o.kt)("p",null,"Let's understand this question first : "),(0,o.kt)("p",null,"We have to find the value of x^n. We can do this by multiplying x n times. But this will take O(n) time. We can optimize this solution by using divide and conquer approach. We can divide the power by 2 and multiply the result with itself. We can repeat this process until we reach the power 0."),(0,o.kt)("p",null,"Lets do brute force to solve this :"),(0,o.kt)("p",null,"Intuition :  We can simply multiply x n times to get the result."),(0,o.kt)("p",null,"Time Complexity : O(n) where n is the power.\nSpace Complexity : O(1) "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"\nclass Solution {\npublic:\n    double myPow(double x, int n) {\n        double ans = 1;\n        for(int i = 0 ; i < abs(n) ; i++){\n            ans = ans * x;\n        }\n        if(n < 0){\n            return 1/ans;\n        }\n        return ans;\n    }\n};\n\n")),(0,o.kt)("p",null,"Now let's try to optimize this solution :"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Intuition :  We can divide the power by 2 and multiply the result with itself. We can repeat this process until we reach the power 0. This will reduce the time complexity to O(logn). This works because x^n = x^(n/2) * x^(n/2) if n is even and x^n = x^(n/2) * x^(n/2) * x if n is odd.")),(0,o.kt)("p",null,"Let's understand this with an example :"),(0,o.kt)("p",null,"x = 2 and n = 10",(0,o.kt)("br",{parentName:"p"}),"\n","o/p : 1024"),(0,o.kt)("p",null,"Remember the power can be negative also. So we have to handle that case also."),(0,o.kt)("p",null,"Let's code this : "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"\nclass Solution {\npublic:\n    double myPow(double x, int n) {\n        if(n == 0){\n            return 1;\n        }\n        double temp = myPow(x,n/2);\n        // if n is even\n        if(n % 2 == 0){\n            // if n is positive then return temp * temp\n            return temp * temp;\n        }\n        else{\n            if(n > 0){\n                // if n is positive then return x * temp * temp -> because n is odd\n                return x * temp * temp;\n            }\n            else{\n                return (temp * temp)/x;\n            }\n        }\n    }\n};\n\n")),(0,o.kt)("p",null,"Let's dry run with an example:"),(0,o.kt)("p",null,"x = 2 and n = 10"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"\nmyPow(2,10) = myPow(2,5) * myPow(2,5)\nmyPow(2,5) = 2 * myPow(2,2) * myPow(2,2)\nmyPow(2,2) = myPow(2,1) * myPow(2,1)\nmyPow(2,1) = 2 * myPow(2,0) * myPow(2,0)\nmyPow(2,0) = 1\n\n")),(0,o.kt)("p",null,"So the final answer will be : "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"\nmyPow(2,10) = 2 * \n                myPow(2,5) * \n                myPow(2,5) = 2 * \n                                2 * \n                                myPow(2,2) * \n                                myPow(2,2) = 2 * \n                                            2 * \n                                            2 * \n                                            myPow(2,1) * \n                                            myPow(2,1) = 2 * \n                                                            2 * \n                                                            2 * \n                                                            2 * \n                                                            2 * \n                                                            myPow(2,0) * \n                                                            myPow(2,0) = 2 * \n                                                                        2 * \n                                                                        2 * \n                                                                        2 * \n                                                                        2 * \n                                                                        1 * \n                                                                        1 = 1024\n    \n    ```\n\nTime Complexity : O(logn) where n is the power.\nSpace Complexity : O(logn)\n\n## Pow(x,n) - Iterative Solution\n\n```cpp\n\nclass Solution {\npublic:\n    double myPow(double x, int n) {\n        double ans = 1;\n        long long int nn = n;\n        if(nn < 0){\n            nn = -1 * nn;\n        }\n        while(nn > 0){\n            if(nn % 2 == 0){\n                x = x * x;\n                nn = nn / 2;\n            }\n            else{\n                ans = ans * x;\n                nn = nn - 1;\n            }\n        }\n        if(n < 0){\n            return 1/ans;\n        }\n        return ans;\n    }\n};\n\n")),(0,o.kt)("p",null,"Time Complexity : O(logn) where n is the power.\nSpace Complexity : O(1)"),(0,o.kt)("p",null,"Let's dry run with an example:"),(0,o.kt)("p",null,"x = 2 and n = 10"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"\nmyPow(2,10);\nans = 1\nnn = 10\nnn % 2 == 0\nx = 2 * 2 = 4\nnn = 10 / 2 = 5\n\nnn > 0\nnn % 2 == 1\nans = 1 * 4 = 4\nnn = 5 - 1 = 4\n\nnn > 0\nnn % 2 == 0\nx = 4 * 4 = 16\nnn = 4 / 2 = 2\n\nnn > 0\nnn % 2 == 0\nx = 16 * 16 = 256\nnn = 2 / 2 = 1\n\nnn > 0\nnn % 2 == 1\nans = 4 * 256 = 1024\nnn = 1 - 1 = 0\n\nnn == 0\nreturn ans = 1024\n\n")))}m.isMDXComponent=!0},9589:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/image-11-6488609a3eef55cafa15dc547fb48898.png"}}]);