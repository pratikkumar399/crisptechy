"use strict";(self.webpackChunkcrisptechy=self.webpackChunkcrisptechy||[]).push([[1879],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?c(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},c=Object.keys(t);for(r=0;r<c.length;r++)n=c[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(r=0;r<c.length;r++)n=c[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=r.createContext({}),u=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},l="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,c=t.originalType,s=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),l=u(n),f=a,m=l["".concat(s,".").concat(f)]||l[f]||d[f]||c;return n?r.createElement(m,o(o({ref:e},p),{},{components:n})):r.createElement(m,o({ref:e},p))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var c=n.length,o=new Array(c);o[0]=f;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[l]="string"==typeof t?t:a,o[1]=i;for(var u=2;u<c;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3296:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const c={},o=void 0,i={unversionedId:"tipsandtricks/StlTricks",id:"tipsandtricks/StlTricks",title:"StlTricks",description:"STL Tricks that can be useful",source:"@site/docs/tipsandtricks/StlTricks.md",sourceDirName:"tipsandtricks",slug:"/tipsandtricks/StlTricks",permalink:"/crisptechy/docs/tipsandtricks/StlTricks",draft:!1,editUrl:"https://github.com/pratikkumar399/crisptechy/tree/master/docs/tipsandtricks/StlTricks.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"intro",permalink:"/crisptechy/docs/intro"}},s={},u=[{value:"STL Tricks that can be useful",id:"stl-tricks-that-can-be-useful",level:2},{value:"1. How to use <code>std::vector</code> as a stack",id:"1-how-to-use-stdvector-as-a-stack",level:3},{value:"2. Sort function with a comparator",id:"2-sort-function-with-a-comparator",level:3}],p={toc:u},l="wrapper";function d(t){let{components:e,...n}=t;return(0,a.kt)(l,(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"stl-tricks-that-can-be-useful"},"STL Tricks that can be useful"),(0,a.kt)("h3",{id:"1-how-to-use-stdvector-as-a-stack"},"1. How to use ",(0,a.kt)("inlineCode",{parentName:"h3"},"std::vector")," as a stack"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include<bits/stdc++.h> \nusing namespace std ;\n\nint  main(){\n\n    vector<int> v ;\n    v.push_back(1) ;\n    v.push_back(2) ;\n    v.push_back(3) ;\n    v.push_back(4) ;\n    v.push_back(5) ;\n\n    cout<<"The stack is : "<<endl ;\n    while(!v.empty()){\n        cout<<v.back()<<" ";\n        v.pop_back() ;\n    }\n    cout<<endl ;\n    return 0 ;\n\n}\n')),(0,a.kt)("h3",{id:"2-sort-function-with-a-comparator"},"2. Sort function with a comparator"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"    vector<int> ans;\n    // using a lambda function to sort the vector in descending order``\n    sort(ans.begin(),ans.end(),[](int a , int b){\n            return b < a;\n    });\n\n    // without lambda function\n    \n    bool compare(int a , int b){\n        return b < a ;\n    }\n    sort(ans.begin(),ans.end(),compare);\n\n")))}d.isMDXComponent=!0}}]);