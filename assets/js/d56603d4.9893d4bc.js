"use strict";(self.webpackChunkcrisptechy=self.webpackChunkcrisptechy||[]).push([[1879],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,v=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return n?r.createElement(v,c(c({ref:t},u),{},{components:n})):r.createElement(v,c({ref:t},u))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:a,c[1]=o;for(var l=2;l<i;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3296:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={},c=void 0,o={unversionedId:"tipsandtricks/StlTricks",id:"tipsandtricks/StlTricks",title:"StlTricks",description:"STL Tricks that can be useful",source:"@site/docs/tipsandtricks/StlTricks.md",sourceDirName:"tipsandtricks",slug:"/tipsandtricks/StlTricks",permalink:"/crisptechy/docs/tipsandtricks/StlTricks",draft:!1,editUrl:"https://github.com/pratikkumar399/crisptechy/tree/master/docs/tipsandtricks/StlTricks.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"intro",permalink:"/crisptechy/docs/intro"}},s={},l=[{value:"STL Tricks that can be useful",id:"stl-tricks-that-can-be-useful",level:2},{value:"1. How to use <code>std::vector</code> as a stack",id:"1-how-to-use-stdvector-as-a-stack",level:3},{value:"2. Sort function with a comparator",id:"2-sort-function-with-a-comparator",level:3},{value:"3. Find sum of a vector using accumulate",id:"3-find-sum-of-a-vector-using-accumulate",level:3},{value:"4. Find the maximum element in a vector",id:"4-find-the-maximum-element-in-a-vector",level:3},{value:"5. Find the minimum element in a vector",id:"5-find-the-minimum-element-in-a-vector",level:3},{value:"6. Find the number of elements in a vector",id:"6-find-the-number-of-elements-in-a-vector",level:3}],u={toc:l},m="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"stl-tricks-that-can-be-useful"},"STL Tricks that can be useful"),(0,a.kt)("h3",{id:"1-how-to-use-stdvector-as-a-stack"},"1. How to use ",(0,a.kt)("inlineCode",{parentName:"h3"},"std::vector")," as a stack"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include<bits/stdc++.h> \nusing namespace std ;\n\nint  main(){\n\n    vector<int> v ;\n    v.push_back(1) ;\n    v.push_back(2) ;\n    v.push_back(3) ;\n    v.push_back(4) ;\n    v.push_back(5) ;\n\n    cout<<"The stack is : "<<endl ;\n    while(!v.empty()){\n        cout<<v.back()<<" ";\n        v.pop_back() ;\n    }\n    cout<<endl ;\n    return 0 ;\n\n}\n')),(0,a.kt)("h3",{id:"2-sort-function-with-a-comparator"},"2. Sort function with a comparator"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"    vector<int> ans;\n    // using a lambda function to sort the vector in descending order``\n    sort(ans.begin(),ans.end(),[](int a , int b){\n            return b < a;\n    });\n\n    // without lambda function\n\n    bool compare(int a , int b){\n        return b < a ;\n    }\n    sort(ans.begin(),ans.end(),compare);\n\n    // normal sort function -> sorts in ascending order\n    sort(ans.begin(),ans.end());\n\n")),(0,a.kt)("h3",{id:"3-find-sum-of-a-vector-using-accumulate"},"3. Find sum of a vector using accumulate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"    vector<int> ans;\n    int sum = accumulate(ans.begin(),ans.end(),0);\n")),(0,a.kt)("h3",{id:"4-find-the-maximum-element-in-a-vector"},"4. Find the maximum element in a vector"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"    vector<int> ans;\n    int max = *max_element(ans.begin(),ans.end());\n")),(0,a.kt)("h3",{id:"5-find-the-minimum-element-in-a-vector"},"5. Find the minimum element in a vector"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"    vector<int> ans;\n    int min = *min_element(ans.begin(),ans.end());\n")),(0,a.kt)("h3",{id:"6-find-the-number-of-elements-in-a-vector"},"6. Find the number of elements in a vector"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"    vector<int> ans;\n    int size = ans.size();\n")))}p.isMDXComponent=!0}}]);