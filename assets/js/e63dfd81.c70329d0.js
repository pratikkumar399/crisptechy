"use strict";(self.webpackChunkcrisptechy=self.webpackChunkcrisptechy||[]).push([[598],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=l(n),d=r,f=c["".concat(p,".").concat(d)]||c[d]||u[d]||a;return n?o.createElement(f,s(s({ref:t},m),{},{components:n})):o.createElement(f,s({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8569:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={},s=void 0,i={unversionedId:"NodeJs/Os_module",id:"NodeJs/Os_module",title:"Os_module",description:"In Node.js, the os module is a core module that provides various utility functions related to the operating system. It allows you to access information about the computer's operating system, network interfaces, and perform other OS-related operations. Here are some common functionalities provided by the os module:",source:"@site/docs/NodeJs/Os_module.md",sourceDirName:"NodeJs",slug:"/NodeJs/Os_module",permalink:"/crisptechy/docs/NodeJs/Os_module",draft:!1,editUrl:"https://github.com/pratikkumar399/crisptechy/tree/master/docs/NodeJs/Os_module.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"CommonJs",permalink:"/crisptechy/docs/NodeJs/CommonJs"},next:{title:"Pathmodule",permalink:"/crisptechy/docs/NodeJs/Pathmodule"}},p={},l=[],m={toc:l},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In Node.js, the ",(0,r.kt)("inlineCode",{parentName:"p"},"os")," module is a core module that provides various utility functions related to the operating system. It allows you to access information about the computer's operating system, network interfaces, and perform other OS-related operations. Here are some common functionalities provided by the ",(0,r.kt)("inlineCode",{parentName:"p"},"os")," module:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Operating System Information"),": The ",(0,r.kt)("inlineCode",{parentName:"p"},"os")," module provides methods to retrieve information about the underlying operating system."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const os = require('os');\n\nconsole.log(os.platform()); // Returns the platform (e.g., 'win32', 'darwin', 'linux')\nconsole.log(os.arch()); // Returns the CPU architecture (e.g., 'x64', 'arm')\nconsole.log(os.hostname()); // Returns the hostname of the operating system\nconsole.log(os.release()); // Returns the release version of the operating system\nconsole.log(os.type()); // Returns the operating system name (e.g., 'Windows_NT', 'Darwin', 'Linux')\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"System Uptime"),": The ",(0,r.kt)("inlineCode",{parentName:"p"},"os.uptime()")," method returns the number of seconds the system has been running."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const os = require('os');\n\nconsole.log(os.uptime()); // Returns the system uptime in seconds\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Memory Information"),": The ",(0,r.kt)("inlineCode",{parentName:"p"},"os")," module allows you to access information about system memory."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const os = require('os');\n\nconsole.log(os.totalmem()); // Returns the total system memory in bytes\nconsole.log(os.freemem()); // Returns the amount of free system memory in bytes\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Network Interfaces"),": You can retrieve network interface information using the ",(0,r.kt)("inlineCode",{parentName:"p"},"os.networkInterfaces()")," method."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const os = require('os');\n\nconst interfaces = os.networkInterfaces();\nconsole.log(interfaces);\n")),(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"networkInterfaces()")," method returns an object that provides information about the available network interfaces on the system, including IP addresses, MAC addresses, and more.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Endianness"),": The ",(0,r.kt)("inlineCode",{parentName:"p"},"os.endianness()")," method returns the endianness of the CPU. It can be either ",(0,r.kt)("inlineCode",{parentName:"p"},"'BE'")," (big endian) or ",(0,r.kt)("inlineCode",{parentName:"p"},"'LE'")," (little endian)."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const os = require('os');\n\nconsole.log(os.endianness()); // Returns either 'BE' or 'LE'\n")))),(0,r.kt)("p",null,"These are just a few examples of the functionalities provided by the ",(0,r.kt)("inlineCode",{parentName:"p"},"os")," module in Node.js. The ",(0,r.kt)("inlineCode",{parentName:"p"},"os")," module offers more methods and properties to interact with the operating system, allowing you to gather information and perform OS-related operations within your Node.js applications."))}u.isMDXComponent=!0}}]);